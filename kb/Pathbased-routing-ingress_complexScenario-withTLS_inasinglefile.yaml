
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: nginx
  name: nginx-deploy-main
spec:
  replicas: 3
  selector:
    matchLabels:
      run: nginx-main
  template:
    metadata:
      labels:
        run: nginx-main
    spec:
      containers:
      - image: nginx
        name: nginx
---        

# First Service file        
apiVersion: v1
kind: Service
metadata:
  labels:
    run: nginx
  name: app1-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: nginx-main

---
#second Deploymemt info              

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: nginx
  name: nginx-deploy-blue  #//Deployment name
spec:
  replicas: 3
  selector:
    matchLabels:
      run: nginx-blue     #//Used for search the pod labels used by deployment
  template:
    metadata:
      labels:
        run: nginx-blue   #//Actual Pod labels
    spec:
      volumes:
      - name: webdata
        emptyDir: {}
      initContainers:
      - name: web-content
        image: busybox
        volumeMounts:
        - name: webdata
          mountPath: "/webdata"
        command: ["/bin/sh", "-c", 'echo "<h1>I am <font color=blue>BLUE</font></h1>" > /webdata/index.html']
      containers:
      - image: nginx
        name: nginx
        volumeMounts:
        - name: webdata
          mountPath: "/usr/share/nginx/html"
---
# Second Service file        
apiVersion: v1
kind: Service
metadata:
  labels:
    run: nginx
  name: app2-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: nginx-blue       #//refers to the actual pod labels
---

#Third  Deploymemt info    
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: nginx
  name: nginx-deploy-green
spec:
  replicas: 3
  selector:
    matchLabels:
      run: nginx-green
  template:
    metadata:
      labels:
        run: nginx-green
    spec:
      volumes:
      - name: webdata
        emptyDir: {}
      initContainers:
      - name: web-content
        image: busybox
        volumeMounts:
        - name: webdata
          mountPath: "/webdata"
        command: ["/bin/sh", "-c", 'echo "<h1>I am <font color=green>GREEN</font></h1>" > /webdata/index.html']
      containers:
      - image: nginx
        name: nginx
        volumeMounts:
        - name: webdata
          mountPath: "/usr/share/nginx/html"    
---
# Third Service file        
apiVersion: v1
kind: Service
metadata:
  labels:
    run: nginx
  name: app3-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: nginx-green
---
#Ingress rules creation for all the above
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:              # This is important in Path based routing which will  not be available in Host based Routing.
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: ingress-resource-2
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - testing.ot-xecm.com
      secretName: ngix-demo-tls
  rules:
  - host: testing.ot-xecm.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app1-service
            port:
              number: 80
  # - host: app2.ot-xecm.com
  #   http:
  #     paths:
      - path: /blue
        pathType: Prefix
        backend:
          service:
            name: app2-service
            port:
              number: 80
  # - host: app3.ot-xecm.com
  #   http:
  #     paths:
      - path: /green
        pathType: Prefix
        backend:
          service:
            name: app3-service
            port:
              number: 80              